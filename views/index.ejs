<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Posts</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    />
  </head>
  <body>
    <div class="container mt-5">
      <h1 class="mb-4">Posts</h1>
      <a href="/new" class="btn btn-primary mb-3" id="addPostBtn">Add Post</a>
      <div class="row" id="post-cards">
        <!-- Post cards will be dynamically added here -->
      </div>
    </div>

    <!-- Edit Modal -->
    <div
      class="modal fade"
      id="editModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="editModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editModalLabel">Edit Post</h5>
            <button
              type="button"
              class="close"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="editForm">
              <div class="form-group">
                <label for="title">Title</label>
                <input type="text" class="form-control" id="title" required />
              </div>
              <div class="form-group">
                <label for="message">Message</label>
                <textarea
                  class="form-control"
                  id="message"
                  rows="3"
                  required
                ></textarea>
              </div>
              <div class="form-group">
                <label for="creator">Creator</label>
                <input type="text" class="form-control" id="creator" required />
              </div>
              <div class="form-group">
                <label for="tags">Tags</label>
                <input
                  type="text"
                  class="form-control"
                  id="tags"
                  placeholder="Enter tags separated by commas"
                />
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-dismiss="modal"
            >
              Close
            </button>
            <button type="button" class="btn btn-primary" id="saveChanges">
              Save Changes
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
      const postCards = document.getElementById("post-cards");
      const editModal = $("#editModal");
      let selectedPostId = null;

      // Fetch posts data from the API
      // Fetch posts data from the API
      fetchPosts();

      async function fetchPosts() {
        try {
          const response = await fetch("/posts");
          const posts = await response.json();
          posts.forEach((post) => createPostCard(post));
        } catch (error) {
          console.error("Error fetching posts:", error);
        }
      }

      // Function to create and append a post card
      function createPostCard(post) {
        const card = document.createElement("div");
        card.classList.add("col-md-4", "mb-4");
        card.innerHTML = `
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">${post.title}</h5>
        <p class="card-text">${post.message}</p>
        <p class="card-text"><small class="text-muted">Creator: ${
          post.creator
        }</small></p>
        <p class="card-text"><small class="text-muted">Tags: ${post.tags.join(
          ", "
        )}</small></p>
        <p class="card-text"><small class="text-muted">Likes: ${
          post.likeCount
        }</small></p>
        <p class="card-text"><small class="text-muted">Created At: ${new Date(
          post.createdAt
        ).toLocaleDateString()}</small></p>
        <button class="btn btn-warning btn-sm" data-toggle="modal" data-target="#editModal" data-post-id="${
          post._id
        }">Edit</button>
        <button class="btn btn-danger btn-sm" data-post-id="${
          post._id
        }" onclick="deletePost('${post._id}')">Delete</button>
      </div>
    </div>
  `;
        postCards.appendChild(card);

        // Handle edit modal show event for this post card
        const editButton = card.querySelector(".btn-warning");
        editButton.addEventListener("click", () => {
          selectedPostId = post._id;

          // Populate the form fields with post data
          $("#title").val(post.title);
          $("#message").val(post.message);
          $("#creator").val(post.creator);
          $("#tags").val(post.tags.join(", "));
        });
      }

      // Handle save changes button click
      $("#saveChanges").click(async function () {
        const title = $("#title").val();
        const message = $("#message").val();
        const creator = $("#creator").val();
        const tags = $("#tags")
          .val()
          .split(",")
          .map((tag) => tag.trim());

        const updatedPost = {
          title,
          message,
          creator,
          tags,
        };

        try {
          const response = await fetch(`/posts/${selectedPostId}`, {
            method: "PATCH",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(updatedPost),
          });

          if (response.ok) {
            console.log("Post updated successfully");
            location.reload();
            // Refresh the post cards or perform any other actions
            fetchPosts();
          } else {
            console.error("Error updating post");
          }
        } catch (error) {
          console.error("Error:", error);
        }

        // Close the modal
        editModal.modal("hide");
      });

      async function deletePost(postId) {
        console.log(postId);
        try {
          const response = await fetch(`/posts/${postId}`, {
            method: "DELETE",
          });

          if (response.ok) {
            console.log("Post deleted successfully");
            location.reload();
          } else {
            console.error("Error deleting post");
          }
        } catch (error) {
          console.error("Error:", error);
        }
      }
    </script>
  </body>
</html>
